dataSources:
  ds0: !!org.apache.commons.dbcp2.BasicDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3339/db_order;
    username: root
    password: 123456
  ds1: !!org.apache.commons.dbcp.BasicDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3340/db_order
    username: root
    password: 123456
  ds2: !!org.apache.commons.dbcp.BasicDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3341/db_order
    username: root
    password: 123456

shardingRule:
  tables:
#    t_user_order:
#      actualDataNodes: ds${0..3}.t_user_order
#      #分库规则
#      databaseStrategy:
#        inline:
#          #分库键
#          shardingColumn: user_id
#          #取模
#          algorithmExpression: db${user_id % 16}
#      tableStrategy:
#        inline:
#          shardingColumn: order_id
#          algorithmExpression: t_user_order_{order_id % 4}
#      keyGenerator:
#        type: SNOWFLAKE
#        column: order_id
    t_order_detail:
      actualDataNodes: ms_ds${0..2}.t_order_detail${0..1}
      databaseStrategy:
        inline:
          shardingColumn: user_id
          algorithmExpression: ms_ds${user_id % 16}
      tableStrategy:
        inline:
          shardingColumn: order_id
          algorithmExpression: t_order_detail%{order_id % 4}
  bindingTables:
    - t_order_detail
  broadcastTables:
    - t_config

  defaultDataSourceName: ds0
  defaultTableStrategy:
    none:
  defaultKeyGenerator:
    type: SNOWFLAKE
    column: order_id

  masterSlaveRules:
    ms_ds0:
      masterDataSourceName: ds0
      slaveDataSourceNames:
        - ds1
        - ds2
      loadBalanceAlgorithmType: ROUND_ROBIN
#    ms_ds1:
#      masterDataSourceName: ds1
#      slaveDataSourceNames:
#        - ds1_slave0
#        - ds1_slave1
#      loadBalanceAlgorithmType: ROUND_ROBIN
props:
  sql.show: true